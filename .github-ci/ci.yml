name: Rust CI

on: [push, pull_request]

jobs:
  build-code:
    runs-on: ubuntu-latest
    container:
      image: rust:latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-
      - name: Set up Rust
        run: |
          rustc --version
          cargo --version
      - name: Build
        run: cargo build --release

  lint-code:
    runs-on: ubuntu-latest
    container:
      image: rust:latest
    needs: build-code
    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-
      - name: Set up Rust
        run: rustup component add clippy
      - name: Lint
        run: cargo clippy -- -D warnings

  format-code:
    runs-on: ubuntu-latest
    container:
      image: rust:latest
    needs: build-code
    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-
      - name: Set up Rust
        run: rustup component add rustfmt
      - name: Check Format
        run: cargo fmt --check

  doc-code:
    runs-on: ubuntu-latest
    container:
      image: rust:latest
    needs: build-code
    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-
      - name: Generate Documentation
        run: cargo doc --no-deps
      - name: Upload Documentation
        uses: actions/upload-artifact@v2
        with:
          name: documentation
          path: target/doc

  benchmark-code:
    runs-on: ubuntu-latest
    container:
      image: rust:latest
    needs: build-code
    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-
      - name: Benchmark
        run: cargo bench

  audit-code:
    runs-on: ubuntu-latest
    container:
      image: rust:latest
    needs: build-code
    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-
      - name: Install Cargo Audit
        run: cargo install cargo-audit
      - name: Audit
        run: cargo audit --json > gl-dependency-scanning-report.json
      - name: Upload Audit Report
        uses: actions/upload-artifact@v2
        with:
          name: dependency-scanning-report
          path: gl-dependency-scanning-report.json

  # unittest-code:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: rust:latest
  #   needs: [lint-code, format-code, doc-code, benchmark-code, audit-code]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Cache cargo registry
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           ~/.cargo/registry
  #           ~/.cargo/git
  #         key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-cargo-registry-
  #     - name: Set up Rust
  #       run: |
  #         rustc --version
  #         cargo --version
  #     - name: Test
  #       run: cargo test

  # coverage-code:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: rust:latest
  #   needs: unittest-code
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Cache cargo registry
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           ~/.cargo/registry
  #           ~/.cargo/git
  #         key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-cargo-registry-
  #     - name: Set up Cargo Tarpaulin
  #       run: |
  #         mkdir -p $CARGO_HOME/bin
  #         cargo install cargo-tarpaulin --root $CARGO_HOME
  #     - name: Generate Coverage
  #       run: cargo tarpaulin --engine llvm --ignore-tests --out Xml
  #     - name: Upload Coverage Report
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: coverage-report
  #         path: cobertura.xml
